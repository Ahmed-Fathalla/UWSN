import numpy as np

x, y = 0.5, 0.5  # center buoy position
y_sp = 0.150005
x_sp = 0.17321
# r = x_sp/2

buoys_centers = np.array([
                            [x, y],                            # 1


                            [x + x_sp/2, y + y_sp],          # 2
                            [x + x_sp, y],                     # 3
                            [x + x_sp/2, y - y_sp],          # 4
                            [x - x_sp/2, y - y_sp],          # 5
                            [x - x_sp, y],                     # 6
                            [x - x_sp/2, y + y_sp],          # 7


                            [x  , y + 2*y_sp],                 # 8
                            [x + x_sp, y + 2*y_sp],           # 9
                            [x + 1.5*x_sp, y+ y_sp],           # 10
                            [x + 2*x_sp, y],                   # 11
                            [x + 1.5 * x_sp, y- y_sp],         # 12
                            [x + x_sp, y - 2 * y_sp],         # 13
                            [x, y - 2 * y_sp],                 # 14
                            [x - x_sp, y - 2 * y_sp],         # 15
                            [x - 1.5 * x_sp, y - y_sp],        # 16
                            [x - 2 * x_sp, y],                 # 17
                            [x - 1.5 * x_sp, y + y_sp],        # 18
                            [x - x_sp, y + 2 * y_sp],  # 19


                            [x - x_sp + x_sp/2 , y + 2 * y_sp + y_sp ],# 20
                            [x + x_sp/2 , y + 2*y_sp + y_sp ],#21
                            [x + x_sp + x_sp/2 , y + 2*y_sp + y_sp ], #22
                            [x + x_sp + x_sp , y + 2*y_sp ], #23
                            [x + 1.5*x_sp + x_sp , y+ y_sp ], #24
                            [x + 2*x_sp + x_sp , y ], #25
                            [x + 1.5 * x_sp + x_sp , y- y_sp ],#26
                            [x + x_sp + x_sp , y - 2 * y_sp ], #27
                            [x + x_sp + x_sp/2 , y - 2 * y_sp - y_sp ],#28
                            [x + x_sp - x_sp/2 , y - 2 * y_sp - y_sp ], # 29
                            [x - x_sp/2 , y - 2 * y_sp - y_sp ], #30
                            [x - x_sp - x_sp/2 , y - 2 * y_sp - y_sp ], #31
                            [x - x_sp - x_sp , y - 2 * y_sp ], #32
                            [x - 1.5 * x_sp - x_sp , y - y_sp ], #33
                            [x - 2 * x_sp - x_sp , y ], #34
                            [x - 1.5 * x_sp - x_sp , y + y_sp ], #35
                            [x - x_sp - x_sp , y + 2 * y_sp ], #36
                            [x - x_sp - x_sp/2 , y + 2 * y_sp + y_sp ], #37


                            [x - x_sp - x_sp/2 + x_sp/2 , y + 2 * y_sp + y_sp + y_sp ], #38
                            [x - x_sp + x_sp/2 + x_sp/2 , y + 2 * y_sp + y_sp + y_sp ], #39
                            [x + x_sp/2 + x_sp/2 , y + 2*y_sp + y_sp + y_sp ], #40
                            [x + x_sp + x_sp/2 + x_sp/2 , y + 2*y_sp + y_sp + y_sp ], #41
                            [x + x_sp + x_sp/2 + x_sp , y + 2*y_sp + y_sp ], #42
                            [x + x_sp + x_sp + x_sp , y + 2*y_sp ], #43
                            [x + 1.5*x_sp + x_sp + x_sp , y+ y_sp ], #44
                            [x + 2*x_sp + x_sp + x_sp , y ], #45
                            [x + 1.5 * x_sp + x_sp + x_sp , y- y_sp ], #46
                            [x + x_sp + x_sp + x_sp , y - 2 * y_sp ], #47
                            [x + x_sp + x_sp/2 + x_sp , y - 2 * y_sp - y_sp ], #48
                            [x + x_sp + x_sp/2 + x_sp/2 , y - 2 * y_sp - y_sp - y_sp ], #49
                            [x + x_sp + x_sp/2 - x_sp/2 , y - 2 * y_sp - y_sp - y_sp ], #50
                            [x + x_sp - x_sp/2 - x_sp/2 , y - 2 * y_sp - y_sp - y_sp ], #51
                            [x - x_sp/2 - x_sp/2 , y - 2 * y_sp - y_sp- y_sp ], #52
                            [x - x_sp - x_sp/2 - x_sp/2 , y - 2 * y_sp - y_sp - y_sp ], #53
                            [x - x_sp - x_sp/2 - x_sp , y - 2 * y_sp - y_sp ], #54
                            [x - x_sp - x_sp - x_sp , y - 2 * y_sp ], #55
                            [x - 1.5 * x_sp - x_sp - x_sp , y - y_sp ], #56
                            [x - 2 * x_sp - x_sp - x_sp , y ], #57
                            [x - 1.5 * x_sp - x_sp - x_sp , y + y_sp ], #58
                            [x - x_sp - x_sp - x_sp , y + 2 * y_sp ], #59
                            [x - x_sp - x_sp/2 - x_sp , y + 2 * y_sp + y_sp ], #60
                            [x - x_sp - x_sp/2 + x_sp/2 - x_sp , y + 2 * y_sp + y_sp + y_sp ], #61
                          ])

buoy_neighbour_dict = {
                    1: [2,3,4,5,6,7],
                    2: [9,10,3,1,7,8],
                    3: [10,11,12,4,1,2],
                    4: [3,12,13,14,5,1],
                    5: [1,4,14,15,16,6],
                    6: [7,1,5,16,17,18],
                    7: [8,2,1,6,18,19],
                    8: [21,9,2,7,19,20],
                    9: [22,23,10,2,8,21],
                    10: [23,24,11,3,2,9],
                    11: [24,25,26,12,3,10],
                    12: [11,26,27,13,4,3],
                    13: [12,27,28,29,14,4],
                    14: [4,13,29,30,15,5],
                    15: [5,14,30,31,32,16],
                    16: [6,5,15,32,33,17],
                    17: [18,6,16,33,34,35],
                    18: [19,7,6,17,35,36],
                    19: [20,8,7,18,36,37],
                    20: [39,21,8,19,37,38],
                    21: [40,22,9,8,20,39],
                    22: [41,42,23,9,21,40],
                    23: [42,43,24,10,9,22],
                    24: [43,44,25,11,10,23],
                    25: [44,45,45,26,11,24],
                    26: [25,46,47,27,12,11],
                    27: [26,47,48,28,13,12],
                    28: [27,48,49,50,29,13],
                    29: [13,28,50,51,30,14],
                    30: [14,29,51,52,31,15],
                    31: [15,30,52,53,54,32],
                    32: [16,15,31,54,55,33],
                    33: [17,16,32,55,56,34],
                    34: [35,17,33,56,57,58],
                    35: [36,18,17,34,58,59],
                    36: [37,19,18,35,59,60],
                    37: [38,20,19,36,60,61],
                    38: [-1,39,20,37,61,-1],
                    39: [-1, 40, 21, 20, 38, -1],
                    40: [-1, 41, 22, 21, 39, -1],
                    41: [-1, -1, 42, 22, 40, -1],
                    42: [-1, -1, 43, 23, 22, 41],
                    43: [-1, -1, 43, 23, 22, 42],
                    44: [-1, -1, 45, 25, 24, 43],
                    45: [-1, -1, -1, 46, 25, 44],
                    46: [45, -1, -1, 47, 26, 25],
                    47: [46, -1, -1, 48, 27, 26],
                    48: [47, -1, -1, 49, 28, 27],
                    49: [48, -1, -1, -1, 50, 28],
                    50: [28, 49, -1, -1, 51, 29],
                    51: [29, 50, -1, -1, 52, 30],
                    52: [30, 51, -1, -1, 52, 31],
                    53: [31, 52, -1, -1, -1, 54],
                    54: [32, 31, 53, -1, -1, 55],
                    55: [33, 32, 54, -1, -1, 56],
                    56: [34, 33, 55, -1, -1, 57],
                    57: [58, 34, 56, -1, -1, -1],
                    58: [59, 35, 34, 57, -1, -1],
                    59: [60, 36, 35, 58, -1, -1],
                    60: [61, 37, 36, 59, -1, -1],
                    61: [-1, 38, 37, 60, -1, -1],
                }


def get_grid_map_positions(number_of_buoys):
    return buoys_centers if number_of_buoys == -1 else buoys_centers[:number_of_buoys]